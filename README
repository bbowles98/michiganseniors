Instructions to build and run:



////////////////////////////////////////////////
File Structure For eLect Skeletal: 
michiganseniors
|
|--corda (under development)
|	cordap - all files required to run to our cordapp on backend server
|
|--django_project
|	django_project- URL's, URL definitions
|	elect_api- model definitions, api
|
|--frontend
|	ElectionCreation/CreateElection
|	eLectUI	
|	searchAndBallot
|	searchForElections
|	signIn
/////////////////////////////////////////////////

API Guide for elect

The digital ocean server is located at 204.48.30.178.

* HOST FEATURES *

	CREATE ELECTION
		Send a POST request to 204.48.30.178/election/

		SEND
		{
			"name": "The best election ever"
		}
		
		RECEIVE
		{
			"election_id": int
			"passcode": string
			"success": "true"
		}
		
	CREATE BALLOT
		Send a POST request to 204.48.30.178/ballot/

		SEND
		{
			"election_id": int,
			"ballot_items": [{"question": “<example question>”, "choices" :[“<answer1>“, “<answer2>“, “<answer3>”]}]
		}
		
		RECEIVE
		{
			"success": "true"
		}
		
	MAKE ELECTION LIVE
		Send a POST request to 204.48.30.178/live/

		SEND
		{
			"election_id": int
		}
		
		RECEIVE
		{
			"success": "true",
			"live": boolean
		}
	
	VIEW ELECTIONS
		Send a GET request to 204.48.30.178/elections/
		
		RECEIVE
		{
			"election": [
				{
				    "passcode": string,
				    "status": boolean,
				    "election_id": int,
				    "name": string,
				    "creator": string
				}
			    ]
		}
		
	DELETE ELECTION
		SEND a DELETE request to 204.48.30.178/delete/
		
		SEND
		{
			"election_id": int
		}

* VOTER FEATURES *

	SEARCH FOR ELECTION
		Send a GET request to 204.48.30.178/search/
		
		SEND
		{
			"name": string
		}
		
		RECEIVE
		{
			"election": [
				{
				    "passcode": string,
				    "status": boolean,
				    "election_id": int,
				    "name": string,
				    "creator": string
				}
			    ]
		}
		* it will return all elections whose name contains 'name'

	VIEW BALLOT
		Send a GET request to 204.48.30.178/vote/
		
		SEND
		{
			"election_id": int
		}
		
		RECEIVE
		{
			"ballot": {
				{
					question of ballot: [
						answer1,
						answer2,
						. . .
					]
				}
			}
		}

	CAST VOTE
		Send a POST request to 204.48.30.178/cast/
		
		SEND
		{
			"election_id": int,
			"candidate": string
		}
		
		RECEIVE
		{
			"success": boolean
		}
		*currently can only vote for one candidate, multiple votes will be implemented when needed

* JOINED FEATURES *

	SIGNUP
		Send a POST request to 204.48.30.178/signup/

		SEND
		{
			"username": "<username>",
			"email": "<email>",
			"password": "<password>"	
		}	
		
	VIEW RESULTS
		Send a GET request to 204.48.30.178/results/
		
		SEND
		{
			"election_id": int
		}
		
		RECEIVE
		{
			"results": {
				candidate 1: count,
				candidate 2: count,
				. . .
			}
		}

